{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cyber\\\\my-app\\\\form-demo\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport useInput from \"../use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const {\n    value: enteredName,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangeHandler,\n    inputBlurHandler: nameBlurHandler\n  } = useInput(value => value.trim());\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\n\n  const nameInputChangeHandler = e => {\n    setEnteredName(e.target.value);\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n    setEnteredEmailTouched(true);\n  };\n\n  const nameInputBlurHandler = e => {\n    setEnteredNameTouched(true);\n  };\n\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouched(true);\n  };\n\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setEnteredEmail('');\n    setEnteredEmailTouched(false);\n    setEnteredNameTouched(false);\n  };\n\n  let formIsValid = false;\n  if (enteredEmailIsValid && enteredNameIsValid) formIsValid = true;\n  const nameInputClasses = nameInputIsInvalid || emailInputIsInvalid ? \"form-control invalid\" : \"form-control \";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), emailInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"+MyrWDEZZMtI4vHZcDFDHTEy5jc=\", false, function () {\n  return [useInput];\n});\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","hasError","nameInputHasError","valueChangeHandler","nameChangeHandler","inputBlurHandler","nameBlurHandler","trim","enteredEmail","setEnteredEmail","enteredEmailTouched","setEnteredEmailTouched","enteredNameIsValid","enteredEmailIsValid","includes","nameInputIsInvalid","enteredNameTouched","emailInputIsInvalid","nameInputChangeHandler","e","setEnteredName","target","setEnteredNameTouched","emailInputChangeHandler","nameInputBlurHandler","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","formIsValid","nameInputClasses"],"sources":["C:/Users/Cyber/my-app/form-demo/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\nimport useInput from \"../use-input\";\n\nconst SimpleInput = (props) => {\n  const { value: enteredName, hasError: nameInputHasError, valueChangeHandler: nameChangeHandler, inputBlurHandler: nameBlurHandler } = useInput(value => value.trim())\n  \n  \n  const [enteredEmail, setEnteredEmail] = useState('')\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false)\n\n  const enteredNameIsValid = enteredName.trim() !== \"\";\n  const enteredEmailIsValid = enteredEmail.includes('@')\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  const emailInputIsInvalid = !enteredEmailIsValid && enteredEmailTouched\n  const nameInputChangeHandler = (e) => {\n    setEnteredName(e.target.value);\n    setEnteredNameTouched(true);\n  };\n  const emailInputChangeHandler = (e) => {\n    setEnteredEmail(e.target.value)\n    setEnteredEmailTouched(true)\n  }\n  const nameInputBlurHandler = (e) => {\n    setEnteredNameTouched(true);\n  };\n  const emailInputBlurHandler = (e) => {\n    setEnteredEmailTouched(true)\n  }\n  const formSubmissionHandler = (e) => {\n    e.preventDefault();\n    setEnteredNameTouched(true);\n    setEnteredEmailTouched(true)\n    if (!enteredNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n    console.log(enteredName);\n    setEnteredName(\"\");\n    setEnteredEmail('')\n    setEnteredEmailTouched(false)\n    setEnteredNameTouched(false)\n  };\n  let formIsValid = false\n  if (enteredEmailIsValid && enteredNameIsValid) formIsValid = true\n  const nameInputClasses = nameInputIsInvalid || emailInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control \";\n    \n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && (\n          <p className=\"error-text\">name must not be empty</p>\n        )}\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"email\">email</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailInputChangeHandler}\n          onBlur={emailInputBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputIsInvalid && (\n          <p className=\"error-text\">please enter a valid email</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,cAArB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM;IAAEC,KAAK,EAAEC,WAAT;IAAsBC,QAAQ,EAAEC,iBAAhC;IAAmDC,kBAAkB,EAAEC,iBAAvE;IAA0FC,gBAAgB,EAAEC;EAA5G,IAAgIV,QAAQ,CAACG,KAAK,IAAIA,KAAK,CAACQ,IAAN,EAAV,CAA9I;EAGA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACe,mBAAD,EAAsBC,sBAAtB,IAAgDhB,QAAQ,CAAC,KAAD,CAA9D;EAEA,MAAMiB,kBAAkB,GAAGZ,WAAW,CAACO,IAAZ,OAAuB,EAAlD;EACA,MAAMM,mBAAmB,GAAGL,YAAY,CAACM,QAAb,CAAsB,GAAtB,CAA5B;EACA,MAAMC,kBAAkB,GAAG,CAACH,kBAAD,IAAuBI,kBAAlD;EACA,MAAMC,mBAAmB,GAAG,CAACJ,mBAAD,IAAwBH,mBAApD;;EACA,MAAMQ,sBAAsB,GAAIC,CAAD,IAAO;IACpCC,cAAc,CAACD,CAAC,CAACE,MAAF,CAAStB,KAAV,CAAd;IACAuB,qBAAqB,CAAC,IAAD,CAArB;EACD,CAHD;;EAIA,MAAMC,uBAAuB,GAAIJ,CAAD,IAAO;IACrCV,eAAe,CAACU,CAAC,CAACE,MAAF,CAAStB,KAAV,CAAf;IACAY,sBAAsB,CAAC,IAAD,CAAtB;EACD,CAHD;;EAIA,MAAMa,oBAAoB,GAAIL,CAAD,IAAO;IAClCG,qBAAqB,CAAC,IAAD,CAArB;EACD,CAFD;;EAGA,MAAMG,qBAAqB,GAAIN,CAAD,IAAO;IACnCR,sBAAsB,CAAC,IAAD,CAAtB;EACD,CAFD;;EAGA,MAAMe,qBAAqB,GAAIP,CAAD,IAAO;IACnCA,CAAC,CAACQ,cAAF;IACAL,qBAAqB,CAAC,IAAD,CAArB;IACAX,sBAAsB,CAAC,IAAD,CAAtB;;IACA,IAAI,CAACC,kBAAD,IAAuB,CAACC,mBAA5B,EAAiD;MAC/C;IACD;;IACDe,OAAO,CAACC,GAAR,CAAY7B,WAAZ;IACAoB,cAAc,CAAC,EAAD,CAAd;IACAX,eAAe,CAAC,EAAD,CAAf;IACAE,sBAAsB,CAAC,KAAD,CAAtB;IACAW,qBAAqB,CAAC,KAAD,CAArB;EACD,CAZD;;EAaA,IAAIQ,WAAW,GAAG,KAAlB;EACA,IAAIjB,mBAAmB,IAAID,kBAA3B,EAA+CkB,WAAW,GAAG,IAAd;EAC/C,MAAMC,gBAAgB,GAAGhB,kBAAkB,IAAIE,mBAAtB,GACrB,sBADqB,GAErB,eAFJ;EAIA,oBACE;IAAM,QAAQ,EAAES,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEK,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAEb,sBAHZ;QAIE,MAAM,EAAEM,oBAJV;QAKE,KAAK,EAAExB;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGe,kBAAkB,iBACjB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAK,SAAS,EAAEgB,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,OAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,OAFL;QAGE,QAAQ,EAAER,uBAHZ;QAIE,MAAM,EAAEE,qBAJV;QAKE,KAAK,EAAEjB;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGS,mBAAmB,iBAClB;QAAG,SAAS,EAAC,YAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAdF,eA2BE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QA3BF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD,CA7ED;;GAAMpB,W;UACkID,Q;;;KADlIC,W;AA+EN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}